services:
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    volumes:
      - ./web/src:/var/www/html

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./web/src:/var/www/html
    depends_on:
      - web

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_MULTIPLE_DATABASES: ${POSTGRES_MULTIPLE_DATABASES}
      LABEL_STUDIO_POSTGRES_DB: ${LABEL_STUDIO_POSTGRES_DB}
      WEB_POSTGRES_DB: ${WEB_POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  label-studio:
    image: heartexlabs/label-studio:latest
    ports:
      - "8080:8080"
    environment:
      - DJANGO_DB=postgresql
      - POSTGRE_NAME=${LABEL_STUDIO_POSTGRES_DB}
      - POSTGRE_USER=${POSTGRES_USER}
      - POSTGRE_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRE_HOST=postgres
      - POSTGRE_PORT=5432
      - LABEL_STUDIO_HOST=${LABEL_STUDIO_HOST:-http://localhost:8080}
    volumes:
      - label_studio_data:/label-studio/data
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  minio_data:
  postgres_data:
  label_studio_data:
